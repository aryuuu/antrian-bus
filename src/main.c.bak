#include "lib/simlib.h"

#define CAR_RENTAL_LOCATION 0
#define TERMINAL_1_LOCATION 4.5
#define TERMINAL_2_LOCATION 5.5

#define TRACK_LENGTH 10

#define SIMULATION_DURATION 80 * 3600
#define MINIMUM_WAITING_TIME 5 * 60

// Random Number
#define CAR_RENTAL_ARRIVAL_RATE 24
#define TERMINAL_1_ARRIVAL_RATE 14
#define TERMINAL_2_ARRIVAL_RATE 10
#define UNLOADING_RATE_MIN 16
#define UNLOADING_RATE_MAX 24
#define LOADING_RATE_MIN 15
#define LOADING_RATE_MAX 25
#define DESTINATION_TERMINAL_1 0.583
#define DESTINATION_TERMINAL_2 0.417

// Stream
#define STREAM_TERMINAL_1 1
#define STREAM_TERMINAL_2 2
#define STREAM_CAR_RENTAL 3
#define STREAM_UNLOADING_TIME 4
#define STREAM_LOADING_TIME 5
#define STREAM_DESTINATION 6

#define BUS_SPEED 30
#define MAX_BUS_WAIT 5

// Queue
#define QUEUE_CAR_RENTAL 1
#define QUEUE_TERMINAL_1 2
#define QUEUE_TERMINAL_2 3
#define LIST_BUS 4

// Event
#define EVENT_ARRIVAL_CAR_RENTAL 1
#define EVENT_DEPART_CAR_RENTAL 2
#define EVENT_ARRIVAL_TERMINAL_1 3
#define EVENT_DEPART_TERMINAL_1 4
#define EVENT_ARRIVAL_TERMINAL_2 5
#define EVENT_DEPART_TERMINAL_2 6

#define PEOPLE_ARRIVE_CAR_RENTAL 10
#define PEOPLE_ARRIVE_TERMINAL_1 11
#define PEOPLE_ARRIVE_TERMINAL_2 12

#define EVENT_END_OF_TIME 100

// End Simulation Time
#define END_SIMULATION_TIME 80 * 60

// Non simlib global variables
double bus_location, bus_wait;

/**
 * @brief initialize events
 *
 */
void init_events()
{
  // Init bus location in Car Rental
  bus_location = CAR_RENTAL_LOCATION;
  bus_wait = 0.0;

  // Interarrival Time Events in Car Rental
  int time = expon(CAR_RENTAL_ARRIVAL_RATE, STREAM_CAR_RENTAL);
  while (time < END_SIMULATION_TIME) {
    event_schedule(time, PEOPLE_ARRIVE_CAR_RENTAL);
    time += expon(CAR_RENTAL_ARRIVAL_RATE, STREAM_CAR_RENTAL);
  }

  // Interarrival Time Events in Terminal 1
  time = expon(TERMINAL_1_ARRIVAL_RATE, STREAM_TERMINAL_1);
  while (time < END_SIMULATION_TIME) {
    event_schedule(time, PEOPLE_ARRIVE_TERMINAL_1);
    time += expon(TERMINAL_1_ARRIVAL_RATE, STREAM_TERMINAL_1);
  }

  // Interarrival Time Events in Terminal 2
  time = expon(TERMINAL_2_ARRIVAL_RATE, STREAM_TERMINAL_2);
  while (time < END_SIMULATION_TIME) {
    event_schedule(time, PEOPLE_ARRIVE_TERMINAL_2);
    time += expon(TERMINAL_2_ARRIVAL_RATE, STREAM_TERMINAL_2);
  }

  event_schedule(END_SIMULATION_TIME, EVENT_END_OF_TIME);
}

/**
 * @brief generate passenger and push it to each queues in terminals
 *
 */
void generate_passenger();

/**
 * @brief move bus
 *
 */
void move_bus();

/**
 * @brief load passenger on a location
 *
 * @param location loading location
 * location's value should be 1 for car rental, 2 for terminal-1 and 3 for
 * terminal-2
 */
void load_passenger(int location);

/**
 * @brief unload passenger on a location
 *
 * @param location unloading location
 */
void unload_passenger(int location);

void generate_report();

void people_arrive(double location) {
  // Bus in location
  if (location == bus_location) {
    // Unload 

    printf("LOAD %f", location);
  }
  else {
    printf("Masuk q %f", location);
  }
}

/* CAR RENTAL FUNCTION */
// /* Bus depart From Car Rental */
// void car_rental_depart()
// {
//   event_schedule(sim_time + 10, EVENT_ARRIVAL_TERMINAL_1);
//   printf("depart car rental\n");
// }

// /* Bus arrive in Car Rental */
// void car_rental_arrival()
// {
//   printf("arrival car rental\n");

//   // UNLOAD DULU
//   if (list_size[LIST_BUS] < 20)
//   {
//     // LOAD
//   }
//   else
//   {
//     // QUEUE
//   }
//   // Unload Passenger From Bus Queue (FIFO)

//   // Load Passenger From Car Rental Queue To Bus Queue (FIFO)

//   // Check if next arrival is < 5 minutes, kalau iya naik kalau enggak masukin ke queue terus jalan

//   event_schedule(sim_time + 5, EVENT_DEPART_CAR_RENTAL);
// }

// /* TERMINAL 1 FUNCTION */
// void terminal_1_depart()
// {
//   event_schedule(sim_time + 10, EVENT_ARRIVAL_TERMINAL_2);
//   printf("depart terminal 1\n");
// }

// void terminal_1_arrival()
// {
//   printf("arrival terminal 1\n");
//   event_schedule(sim_time + 5, EVENT_DEPART_TERMINAL_1);
// }

// /* TERMINAL 2 FUNCTION */
// void terminal_2_depart()
// {
//   event_schedule(sim_time + 10, EVENT_ARRIVAL_CAR_RENTAL);
//   printf("depart terminal 2\n");
// }

// void terminal_2_arrival()
// {
//   printf("arrival terminal 2\n");
//   event_schedule(sim_time + 5, EVENT_DEPART_TERMINAL_2);
// }

int main()
{
  int ievent;

  /* Initialize simlib */
  init_simlib();

  /* Initialize events */
  init_events();

  while (list_size[LIST_EVENT] > 0)
  {
    /* Determine the next event. */
    timing();

    switch (next_event_type)
    {
      case PEOPLE_ARRIVE_CAR_RENTAL:
        // printf("People CR\n");
        people_arrive(CAR_RENTAL_LOCATION);
        break;
      case PEOPLE_ARRIVE_TERMINAL_1:
        // printf("People T1\n");
        people_arrive(TERMINAL_1_LOCATION);
        break;
      case PEOPLE_ARRIVE_TERMINAL_2:
        // printf("People T2\n");
        people_arrive(TERMINAL_2_LOCATION);
        break;
    // Bus in Car Rental
    // case EVENT_ARRIVAL_CAR_RENTAL:
    //   car_rental_arrival();
    //   break;
    // case EVENT_DEPART_CAR_RENTAL:
    //   car_rental_depart();
    //   break;
    // case EVENT_ARRIVAL_TERMINAL_1:
    //   terminal_1_arrival();
    //   break;
    // case EVENT_DEPART_TERMINAL_1:
    //   terminal_1_depart();
    //   break;
    // case EVENT_ARRIVAL_TERMINAL_2:
    //   terminal_2_arrival();
    //   break;
    // case EVENT_DEPART_TERMINAL_2:
    //   terminal_2_depart();
    //   break;

    case EVENT_END_OF_TIME:
      for (ievent = EVENT_ARRIVAL_CAR_RENTAL; ievent <= EVENT_DEPART_TERMINAL_2; ievent++)
        event_cancel(ievent);
      break;
    }
  }

  return 0;
}
